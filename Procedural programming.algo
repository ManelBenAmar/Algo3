
/* Write a procedure, called dot_product which calculates in the variable ps, the dot(scalar) 
product of v1 and v2 (v1 and v2 are vectors of IR)*/

PROCEDURE dot_product(VAR ps:INTEGER; V1,V2 : ARRAY_OF INTEGER )
VAR
    ps:=0;
    i :INTEGER;
BEGIN
    FOR i FROM 0 TO len(V1)-1  DO
    ps:= ps+ V1[i]*V2[i];
    END_FOR
END


/*Write an algorithm which determines, for n pairs of given vectors, whether two vectors of given IR are orthogonal, 
by calling the procedure defined in the previous question. The dot product of two orthogonal vectors is zero.*/
ALGORITHM scalar_product
VAR
    ps : INTEGER;
    V1,V2 : ARRAY_OF INTEGER[10];
BEGIN
    dot_product(ps,V1,V2 );
    IF (ps = 0) THEN
        write ("V1 and V2 are orthogonal");
    ELSE
        write ("V1 and V2 are not orthogonal");
    END IF ;
END


/* Modify the previous algorithm if you use a dot_product function instead of a procedure.*/
FUNCTION dot_product( ps:INTEGER; V1,V2 : ARRAY_OF INTEGER)
VAR
    ps:=0;
    i :INTEGER;
BEGIN
     FOR i FROM 0 TO len(V1)-1  DO
         ps:= ps+ V1[i]*V2[i];
     END_FOR
    RETURN ps ;
END
ALGORITHM  scalar_product
VAR
    ps : INTEGER;
    V1,V2 : ARRAY_OF INTEGER[10];
BEGIN
    dot_product(V1,V2);
    IF (ps = 0) THEN
        write ("V1 and V2 are orthogonal");
    ELSE
        write ("V1 and V2 are not orthogonal");
    END IF ;
END